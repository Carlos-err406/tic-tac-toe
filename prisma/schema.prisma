// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Games {
  roomID       String      @id @unique @db.VarChar(6)
  inviteLink   String
  gameLink     String
  state        GameState   @default(value: CREATED)
  board        Boards      @relation(fields: [boardId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  challenger   Challengers @relation(fields: [challengerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  opponent     Opponents   @relation(fields: [opponentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  score        Scores      @relation(fields: [scoreId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  boardId      Int
  challengerId Int
  opponentId   Int
  scoreId      Int
  createdAt    DateTime    @default(now())
}

model Scores {
  id    Int     @id @default(autoincrement())
  X     Int     @default(0)
  O     Int     @default(0)
  Games Games[]
}

model Boards {
  id    Int      @id @default(autoincrement())
  cells String[] @default(value: ["", "", "", "", "", "", "", "", ""])
  Games Games[]
}

model Challengers {
  id    Int     @id @default(autoincrement())
  name  String  @db.VarChar(8)
  Games Games[]
}

model Opponents {
  id   Int     @id @default(autoincrement())
  name String  @db.VarChar(8)
  Game Games[]
}

enum GameState {
  CREATED
  OPONENT_JOINING
  IN_PROGRESS
  O_WON
  X_WON
  DRAW
  X
  O
}
