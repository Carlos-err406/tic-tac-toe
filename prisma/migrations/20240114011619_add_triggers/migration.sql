---OPONENT JOINING
CREATE OR REPLACE FUNCTION NOTIFY_STATE_CHANGE() RETURNS trigger AS 
$BODY$ 
	BEGIN 
		IF NEW."state" <> OLD."state" THEN
			PERFORM pg_notify(
				NEW."roomID" || '___' || 'state_change',
				NEW."state"::text
			);
   		END IF;
		RETURN NULL;
	END;
$BODY$ LANGUAGE plpgsql VOLATILE COST 100;
CREATE OR REPLACE TRIGGER NOTIFY_STATE_CHANGE_TRIGGER AFTER UPDATE ON "Game" FOR EACH ROW EXECUTE PROCEDURE NOTIFY_STATE_CHANGE(); 


CREATE OR REPLACE FUNCTION NOTIFY_GAME_UPDATE() RETURNS trigger AS 
$BODY$ 
	BEGIN 
		PERFORM pg_notify(
			NEW."roomID" || '___' || 'game_update',
			row_to_json(NEW)::text
		);
		RETURN NULL;
	END;
$BODY$ LANGUAGE plpgsql VOLATILE COST 100;
CREATE OR REPLACE TRIGGER NOTIFY_GAME_UPDATE_TRIGGER AFTER UPDATE ON "Game" FOR EACH ROW EXECUTE PROCEDURE NOTIFY_GAME_UPDATE(); 
